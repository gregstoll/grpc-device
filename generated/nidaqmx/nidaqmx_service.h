
//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Service header for the NI-DAQMX Metadata
//---------------------------------------------------------------------
#ifndef NIDAQMX_GRPC_SERVICE_H
#define NIDAQMX_GRPC_SERVICE_H

#include <nidaqmx.grpc.pb.h>
#include <condition_variable>
#include <grpcpp/grpcpp.h>
#include <grpcpp/health_check_service_interface.h>
#include <grpcpp/ext/proto_server_reflection_plugin.h>
#include <map>
#include <server/session_resource_repository.h>
#include <server/shared_library.h>

#include "nidaqmx_library_interface.h"

namespace nidaqmx_grpc {

class NiDAQmxService final : public NiDAQmx::Service {
public:
  using ResourceRepositorySharedPtr = std::shared_ptr<nidevice_grpc::SessionResourceRepository<TaskHandle>>;

  NiDAQmxService(NiDAQmxLibraryInterface* library, ResourceRepositorySharedPtr session_repository);
  virtual ~NiDAQmxService();
  
  ::grpc::Status CreateTask(::grpc::ServerContext* context, const CreateTaskRequest* request, CreateTaskResponse* response) override;
  ::grpc::Status ClearTask(::grpc::ServerContext* context, const ClearTaskRequest* request, ClearTaskResponse* response) override;
  ::grpc::Status StartTask(::grpc::ServerContext* context, const StartTaskRequest* request, StartTaskResponse* response) override;
  ::grpc::Status StopTask(::grpc::ServerContext* context, const StopTaskRequest* request, StopTaskResponse* response) override;
  ::grpc::Status ExportSignal(::grpc::ServerContext* context, const ExportSignalRequest* request, ExportSignalResponse* response) override;
  ::grpc::Status GetExtendedErrorInfo(::grpc::ServerContext* context, const GetExtendedErrorInfoRequest* request, GetExtendedErrorInfoResponse* response) override;
  ::grpc::Status ConnectTerms(::grpc::ServerContext* context, const ConnectTermsRequest* request, ConnectTermsResponse* response) override;
  ::grpc::Status DisconnectTerms(::grpc::ServerContext* context, const DisconnectTermsRequest* request, DisconnectTermsResponse* response) override;
  ::grpc::Status CfgDigEdgeStartTrig(::grpc::ServerContext* context, const CfgDigEdgeStartTrigRequest* request, CfgDigEdgeStartTrigResponse* response) override;
  ::grpc::Status CreateCIPulseChanFreq(::grpc::ServerContext* context, const CreateCIPulseChanFreqRequest* request, CreateCIPulseChanFreqResponse* response) override;
  ::grpc::Status ReadCtrFreq(::grpc::ServerContext* context, const ReadCtrFreqRequest* request, ReadCtrFreqResponse* response) override;
  ::grpc::Status ReadCtrFreqStream(::grpc::ServerContext* context, const ReadCtrFreqStreamRequest* request, ::grpc::ServerWriter<ReadCtrFreqStreamResponse>* writer) override;
  ::grpc::Status CreateAIVoltageChan(::grpc::ServerContext* context, const CreateAIVoltageChanRequest* request, CreateAIVoltageChanResponse* response) override;
  ::grpc::Status CreateAOVoltageChan(::grpc::ServerContext* context, const CreateAOVoltageChanRequest* request, CreateAOVoltageChanResponse* response) override;
  ::grpc::Status CreateDIChan(::grpc::ServerContext* context, const CreateDIChanRequest* request, CreateDIChanResponse* response) override;
  ::grpc::Status CreateDOChan(::grpc::ServerContext* context, const CreateDOChanRequest* request, CreateDOChanResponse* response) override;
  ::grpc::Status GetChanAttributeUInt32(::grpc::ServerContext* context, const GetChanAttributeUInt32Request* request, GetChanAttributeUInt32Response* response) override;
  ::grpc::Status SetChanAttributeUInt32(::grpc::ServerContext* context, const SetChanAttributeUInt32Request* request, SetChanAttributeUInt32Response* response) override;
  ::grpc::Status GetChanAttributeInt32(::grpc::ServerContext* context, const GetChanAttributeInt32Request* request, GetChanAttributeInt32Response* response) override;
  ::grpc::Status SetChanAttributeInt32(::grpc::ServerContext* context, const SetChanAttributeInt32Request* request, SetChanAttributeInt32Response* response) override;
  ::grpc::Status GetChanAttributeDouble(::grpc::ServerContext* context, const GetChanAttributeDoubleRequest* request, GetChanAttributeDoubleResponse* response) override;
  ::grpc::Status SetChanAttributeDouble(::grpc::ServerContext* context, const SetChanAttributeDoubleRequest* request, SetChanAttributeDoubleResponse* response) override;
  ::grpc::Status GetChanAttributeString(::grpc::ServerContext* context, const GetChanAttributeStringRequest* request, GetChanAttributeStringResponse* response) override;
  ::grpc::Status SetChanAttributeString(::grpc::ServerContext* context, const SetChanAttributeStringRequest* request, SetChanAttributeStringResponse* response) override;
  ::grpc::Status GetTimingAttributeUInt32(::grpc::ServerContext* context, const GetTimingAttributeUInt32Request* request, GetTimingAttributeUInt32Response* response) override;
  ::grpc::Status SetTimingAttributeUInt32(::grpc::ServerContext* context, const SetTimingAttributeUInt32Request* request, SetTimingAttributeUInt32Response* response) override;
  ::grpc::Status GetTimingAttributeInt32(::grpc::ServerContext* context, const GetTimingAttributeInt32Request* request, GetTimingAttributeInt32Response* response) override;
  ::grpc::Status SetTimingAttributeInt32(::grpc::ServerContext* context, const SetTimingAttributeInt32Request* request, SetTimingAttributeInt32Response* response) override;
  ::grpc::Status GetTimingAttributeDouble(::grpc::ServerContext* context, const GetTimingAttributeDoubleRequest* request, GetTimingAttributeDoubleResponse* response) override;
  ::grpc::Status SetTimingAttributeDouble(::grpc::ServerContext* context, const SetTimingAttributeDoubleRequest* request, SetTimingAttributeDoubleResponse* response) override;
  ::grpc::Status GetTimingAttributeString(::grpc::ServerContext* context, const GetTimingAttributeStringRequest* request, GetTimingAttributeStringResponse* response) override;
  ::grpc::Status SetTimingAttributeString(::grpc::ServerContext* context, const SetTimingAttributeStringRequest* request, SetTimingAttributeStringResponse* response) override;
  ::grpc::Status GetRealTimeAttributeUInt32(::grpc::ServerContext* context, const GetRealTimeAttributeUInt32Request* request, GetRealTimeAttributeUInt32Response* response) override;
  ::grpc::Status SetRealTimeAttributeUInt32(::grpc::ServerContext* context, const SetRealTimeAttributeUInt32Request* request, SetRealTimeAttributeUInt32Response* response) override;
  ::grpc::Status GetRealTimeAttributeInt32(::grpc::ServerContext* context, const GetRealTimeAttributeInt32Request* request, GetRealTimeAttributeInt32Response* response) override;
  ::grpc::Status SetRealTimeAttributeInt32(::grpc::ServerContext* context, const SetRealTimeAttributeInt32Request* request, SetRealTimeAttributeInt32Response* response) override;
  ::grpc::Status GetRealTimeAttributeDouble(::grpc::ServerContext* context, const GetRealTimeAttributeDoubleRequest* request, GetRealTimeAttributeDoubleResponse* response) override;
  ::grpc::Status SetRealTimeAttributeDouble(::grpc::ServerContext* context, const SetRealTimeAttributeDoubleRequest* request, SetRealTimeAttributeDoubleResponse* response) override;
  ::grpc::Status GetRealTimeAttributeString(::grpc::ServerContext* context, const GetRealTimeAttributeStringRequest* request, GetRealTimeAttributeStringResponse* response) override;
  ::grpc::Status SetRealTimeAttributeString(::grpc::ServerContext* context, const SetRealTimeAttributeStringRequest* request, SetRealTimeAttributeStringResponse* response) override;
  ::grpc::Status ReadDigitalU32(::grpc::ServerContext* context, const ReadDigitalU32Request* request, ReadDigitalU32Response* response) override;
  ::grpc::Status ReadDigitalU32Stream(::grpc::ServerContext* context, const ReadDigitalU32StreamRequest* request, ::grpc::ServerWriter<ReadDigitalU32StreamResponse>* writer) override;
  ::grpc::Status ReadDigitalU16(::grpc::ServerContext* context, const ReadDigitalU16Request* request, ReadDigitalU16Response* response) override;
  ::grpc::Status ReadDigitalU16Stream(::grpc::ServerContext* context, const ReadDigitalU16StreamRequest* request, ::grpc::ServerWriter<ReadDigitalU16StreamResponse>* writer) override;
  ::grpc::Status WriteDigitalU32(::grpc::ServerContext* context, const WriteDigitalU32Request* request, WriteDigitalU32Response* response) override;
  ::grpc::Status WriteDigitalU32Stream(::grpc::ServerContext* context, ::grpc::ServerReader<WriteDigitalU32StreamRequest>* reader, WriteDigitalU32StreamResponse* response) override;
  ::grpc::Status WriteDigitalU16(::grpc::ServerContext* context, const WriteDigitalU16Request* request, WriteDigitalU16Response* response) override;
  ::grpc::Status WriteDigitalU16Stream(::grpc::ServerContext* context, ::grpc::ServerReader<WriteDigitalU16StreamRequest>* reader, WriteDigitalU16StreamResponse* response) override;
  ::grpc::Status ReadAnalogF64(::grpc::ServerContext* context, const ReadAnalogF64Request* request, ReadAnalogF64Response* response) override;
  ::grpc::Status ReadAnalogF64StreamCodegen(::grpc::ServerContext* context, const ReadAnalogF64StreamCodegenRequest* request, ::grpc::ServerWriter<ReadAnalogF64StreamCodegenResponse>* writer) override;
  ::grpc::Status ReadAnalogF64StreamCustom(::grpc::ServerContext* context, const ReadAnalogF64StreamCustomRequest* request, ::grpc::ServerWriter<ReadAnalogF64StreamCustomResponse>* writer) override;
  ::grpc::Status WriteAnalogF64(::grpc::ServerContext* context, const WriteAnalogF64Request* request, WriteAnalogF64Response* response) override;
  ::grpc::Status WriteAnalogF64StreamCustom(::grpc::ServerContext* context, ::grpc::ServerReader<WriteAnalogF64StreamCustomRequest>* reader, WriteAnalogF64StreamCustomResponse* response) override;
  ::grpc::Status CfgSampClkTiming(::grpc::ServerContext* context, const CfgSampClkTimingRequest* request, CfgSampClkTimingResponse* response) override;
private:
  NiDAQmxLibraryInterface* library_;
  ResourceRepositorySharedPtr session_repository_;
};

} // namespace nidaqmx_grpc

#endif  // NIDAQMX_GRPC_SERVICE_H
